{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Choose a date in the future.',\n      });\n      btnStart.classList.add('disabled');\n    } else {\n      btnStart.classList.remove('disabled');\n    }\n  },\n});\n\nlet currentDate = new Date();\nlet days = document.querySelector('[data-days]');\nlet hours = document.querySelector('[data-hours]');\nlet minutes = document.querySelector('[data-minutes]');\nlet seconds = document.querySelector('[data-seconds]');\nlet dateInput = document.querySelector('#datetime-picker');\nlet selectedDate;\n\nconst btnStart = document.querySelector('.start-button');\nbtnStart.setAttribute('disabled', true);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction setNewDate() {\n  const selectedDateValue = dateInput.value;\n  selectedDate = new Date(selectedDateValue);\n}\n\ndateInput.addEventListener('input', () => {\n  setNewDate();\n  const timeDifference = selectedDate - currentDate;\n\n  if (timeDifference > 0) {\n    btnStart.removeAttribute('disabled');\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const dayDiffer = Math.floor(timeDifference / day);\n    const hourDiffer = Math.floor((timeDifference % day) / hour);\n    const minuteDiffer = Math.floor((timeDifference % hour) / minute);\n    const secondDiffer = Math.floor((timeDifference % minute) / second);\n\n    days.textContent = addLeadingZero(dayDiffer);\n    hours.textContent = addLeadingZero(hourDiffer);\n    minutes.textContent = addLeadingZero(minuteDiffer);\n    seconds.textContent = addLeadingZero(secondDiffer);\n  } else {\n    btnStart.setAttribute('disabled', true);\n    days.textContent = '00';\n    hours.textContent = '00';\n    minutes.textContent = '00';\n    seconds.textContent = '00';\n  }\n});\n\nfunction dateReverseCounter() {\n  btnStart.setAttribute('disabled', true);\n\n  let daysCount = Number(days.textContent);\n  let hoursCount = Number(hours.textContent);\n  let minutesCount = Number(minutes.textContent);\n  let secondsCount = Number(seconds.textContent);\n\n  if (secondsCount === 0) {\n    secondsCount = 59;\n    if (minutesCount === 0) {\n      minutesCount = 59;\n      if (hoursCount === 0) {\n        hoursCount = 23;\n        if (daysCount > 0) {\n          daysCount--;\n        } else {\n          days.textContent = '00';\n          hours.textContent = '00';\n          minutes.textContent = '00';\n          seconds.textContent = '00';\n          iziToast.success({\n            title: 'Success',\n            message: 'Timer is finished.',\n          });\n          clearInterval(timer);\n          timerStarted = false;\n          dateInput.removeAttribute('disabled', true);\n          return;\n        }\n      } else {\n        hoursCount--;\n      }\n    } else {\n      minutesCount--;\n    }\n  } else {\n    secondsCount--;\n  }\n\n  seconds.textContent = addLeadingZero(secondsCount);\n  minutes.textContent = addLeadingZero(minutesCount);\n  hours.textContent = addLeadingZero(hoursCount);\n  days.textContent = addLeadingZero(daysCount);\n}\n\nlet timer;\nlet timerStarted = false;\n\nbtnStart.addEventListener('click', () => {\n  dateInput.setAttribute('disabled', true);\n  if (!timerStarted) {\n    dateReverseCounter();\n    timer = setInterval(dateReverseCounter, 1000);\n    timerStarted = true;\n  }\n});\n"],"names":["flatpickr","selectedDates","iziToast","btnStart","currentDate","days","hours","minutes","seconds","dateInput","selectedDate","addLeadingZero","value","setNewDate","selectedDateValue","timeDifference","second","minute","hour","day","dayDiffer","hourDiffer","minuteDiffer","secondDiffer","dateReverseCounter","daysCount","hoursCount","minutesCount","secondsCount","timer","timerStarted"],"mappings":"+IAKAA,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAK,IAAI,MACzBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,8BACjB,CAAO,EACDC,EAAS,UAAU,IAAI,UAAU,GAEjCA,EAAS,UAAU,OAAO,UAAU,CAEvC,CACH,CAAC,EAED,IAAIC,EAAc,IAAI,KAClBC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAEJ,MAAMP,EAAW,SAAS,cAAc,eAAe,EACvDA,EAAS,aAAa,WAAY,EAAI,EAEtC,SAASQ,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,GAAa,CACpB,MAAMC,EAAoBL,EAAU,MACpCC,EAAe,IAAI,KAAKI,CAAiB,CAC3C,CAEAL,EAAU,iBAAiB,QAAS,IAAM,CACxCI,IACA,MAAME,EAAiBL,EAAeN,EAEtC,GAAIW,EAAiB,EAAG,CACtBZ,EAAS,gBAAgB,UAAU,EACnC,MAAMa,EAAS,IACTC,EAASD,EAAS,GAClBE,EAAOD,EAAS,GAChBE,EAAMD,EAAO,GAEbE,EAAY,KAAK,MAAML,EAAiBI,CAAG,EAC3CE,EAAa,KAAK,MAAON,EAAiBI,EAAOD,CAAI,EACrDI,EAAe,KAAK,MAAOP,EAAiBG,EAAQD,CAAM,EAC1DM,EAAe,KAAK,MAAOR,EAAiBE,EAAUD,CAAM,EAElEX,EAAK,YAAcM,EAAeS,CAAS,EAC3Cd,EAAM,YAAcK,EAAeU,CAAU,EAC7Cd,EAAQ,YAAcI,EAAeW,CAAY,EACjDd,EAAQ,YAAcG,EAAeY,CAAY,CACrD,MACIpB,EAAS,aAAa,WAAY,EAAI,EACtCE,EAAK,YAAc,KACnBC,EAAM,YAAc,KACpBC,EAAQ,YAAc,KACtBC,EAAQ,YAAc,IAE1B,CAAC,EAED,SAASgB,GAAqB,CAC5BrB,EAAS,aAAa,WAAY,EAAI,EAEtC,IAAIsB,EAAY,OAAOpB,EAAK,WAAW,EACnCqB,EAAa,OAAOpB,EAAM,WAAW,EACrCqB,EAAe,OAAOpB,EAAQ,WAAW,EACzCqB,EAAe,OAAOpB,EAAQ,WAAW,EAE7C,GAAIoB,IAAiB,EAEnB,GADAA,EAAe,GACXD,IAAiB,EAEnB,GADAA,EAAe,GACXD,IAAe,EAEjB,GADAA,EAAa,GACTD,EAAY,EACdA,QACK,CACLpB,EAAK,YAAc,KACnBC,EAAM,YAAc,KACpBC,EAAQ,YAAc,KACtBC,EAAQ,YAAc,KACtBN,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oBACrB,CAAW,EACD,cAAc2B,CAAK,EACnBC,EAAe,GACfrB,EAAU,gBAAgB,WAAY,EAAI,EAC1C,MACD,MAEDiB,SAGFC,SAGFC,IAGFpB,EAAQ,YAAcG,EAAeiB,CAAY,EACjDrB,EAAQ,YAAcI,EAAegB,CAAY,EACjDrB,EAAM,YAAcK,EAAee,CAAU,EAC7CrB,EAAK,YAAcM,EAAec,CAAS,CAC7C,CAEA,IAAII,EACAC,EAAe,GAEnB3B,EAAS,iBAAiB,QAAS,IAAM,CACvCM,EAAU,aAAa,WAAY,EAAI,EAClCqB,IACHN,IACAK,EAAQ,YAAYL,EAAoB,GAAI,EAC5CM,EAAe,GAEnB,CAAC"}